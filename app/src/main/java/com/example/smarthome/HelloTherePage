package com.example.smarthome

import android.annotation.SuppressLint
import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.constraintlayout.widget.ConstraintLayout
import com.google.android.material.bottomsheet.BottomSheetBehavior
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.firestore.FirebaseFirestore
import pl.droidsonroids.gif.GifDrawable
import pl.droidsonroids.gif.GifImageView

class HelloTherePage : AppCompatActivity() {

    private var loginButton: Button? = null
    private var signupButton: Button? = null
    private var continueWithFirebase: Button? = null
    private var bottomSheetBehavior: BottomSheetBehavior<*>? = null
    private var firestore: FirebaseFirestore? = null
    private var auth: FirebaseAuth? = null
    private var emailEditText: EditText? = null
    private var passwordEditText: EditText? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_hello_there_page)

        // Initialize FirebaseAuth and Firestore
        auth = FirebaseAuth.getInstance()
        firestore = FirebaseFirestore.getInstance()

        // Bottom Sheet Behavior setup
//        val bottomSheetLayout = findViewById<ConstraintLayout>(R.id.login_buttomsheet)
//        bottomSheetBehavior = BottomSheetBehavior.from(bottomSheetLayout)

        // Handle GIF
        val gif = findViewById<GifImageView>(R.id.LogoGif)
        (gif.drawable as GifDrawable).stop()

        // Email and Password input fields
//        emailEditText = findViewById(R.id.email_input)
//        passwordEditText = findViewById(R.id.password_input)

        // Signup Button
        signupButton = findViewById(R.id.button_signup)
        signupButton?.setOnClickListener {
            val intent = Intent(this@HelloTherePage, RegisterActivity::class.java)
            startActivity(intent)
            overridePendingTransition(R.anim.silde_in_right, R.anim.slide_out_left)
        }

        // Login Button
        loginButton = findViewById(R.id.button_login)

        //continueWithFirebase = findViewById(R.id.buttoncontinue)

        loginButton?.setOnClickListener {
            val intent = Intent(this@HelloTherePage, LoginActivity::class.java)
            startActivity(intent)
            overridePendingTransition(R.anim.silde_in_right, R.anim.slide_out_left)
//            if (bottomSheetBehavior?.state != BottomSheetBehavior.STATE_EXPANDED) {
//                bottomSheetBehavior?.state = BottomSheetBehavior.STATE_EXPANDED
//
//                continueWithFirebase?.setOnClickListener {
//                    val email = emailEditText?.text.toString()
//                    val password = passwordEditText?.text.toString()
//
//                    if (email.isNotEmpty() && password.isNotEmpty()) {
//                        signInWithEmailPassword(email, password)
//                    } else {
//                        Toast.makeText(this@HelloTherePage, "Please enter both email and password", Toast.LENGTH_SHORT).show()
//                    }
//                }
//            }
        }
    }

//    private fun signInWithEmailPassword(email: String, password: String) {
//        auth?.signInWithEmailAndPassword(email, password)
//            ?.addOnCompleteListener { task ->
//                if (task.isSuccessful) {
//                    val user = auth?.currentUser
//                    user?.let {
//                        val mail = it.email
//                        firestore!!.collection("user")
//                            .whereEqualTo("Email", mail)
//                            .get()
//                            .addOnCompleteListener { firestoreTask ->
//                                if (firestoreTask.isSuccessful && !firestoreTask.result.isEmpty) {
//                                    val document = firestoreTask.result.documents[0]
//                                    if (!document.contains("Houses")) {
//                                        Log.i("ireliawashere", "WaitingRoom")
//                                        val intent = Intent(this@HelloTherePage, Waiting_Room::class.java)
//                                        finish()
//                                        startActivity(intent)
//                                    } else {
//                                        Log.i("ireliawashere", "MainDash")
//                                        val intent = Intent(this@HelloTherePage, MainDashBoard::class.java)
//                                        val userInfo = arrayListOf(
//                                            it.email,
//                                            document["Username"].toString(),
//                                            it.photoUrl.toString()
//                                        )
//                                        intent.putExtra("FromMain", userInfo)
//                                        finish()
//                                        startActivity(intent)
//                                    }
//                                } else {
//                                    Log.i("ireliawashere", "User not found in Firestore")
//                                    val intent = Intent(this@HelloTherePage, SignUpPage::class.java)
//                                    startActivity(intent)
//                                }
//                            }
//                    }
//                } else {
//                    Toast.makeText(this@HelloTherePage, "Authentication failed. Please check your credentials.", Toast.LENGTH_SHORT).show()
//                }
//            }
    //}
}
